@page "/eventi"
@inject HttpClient Http
@if(this.EventoCorrente == null)
{
    <h2>Eventi</h2>
    <Lista 
        ElementiLista="ListaEventi" 
        OnCrea="CreaEvento"
        OnElimina="EliminaEvento"
        OnModifica="ModificaEvento">
    </Lista>
}
else
{
    <Dettaglio 
        DettaglioCorrente="EventoCorrente"
        OnSalva="Salva"
        OnAnnulla="Annulla">
    </Dettaglio>
}

@code {

    public DettaglioEvento EventoCorrente { get; set; }

    public List<ElementoListaEvento> ListaEventi { get; set; }
        = new List<ElementoListaEvento>();
    
    protected override async Task OnInitializedAsync()
    {
        await CaricaEventi();    
    }
    
    public async Task CaricaEventi()
    {
        ListaEventi = await Http.GetJsonAsync<List<ElementoListaEvento>>
                    ("http://localhost:5002/api/eventi");
    }

    public void CreaEvento() 
    {
        this.EventoCorrente = new DettaglioEvento();
    }

    public async Task ModificaEvento(ElementoListaEvento elemento) 
    {
        this.EventoCorrente = await Http.GetJsonAsync<DettaglioEvento>
            ($"http://localhost:5002/api/eventi/{elemento.Id}");
    }

    public async Task EliminaEvento(ElementoListaEvento elemento) 
    {
        await Http.DeleteAsync($"http://localhost:5002/api/eventi/{elemento.Id}");
        await CaricaEventi(); 
    }

    public async Task Salva(DettaglioEvento elemento)
    {
        if(elemento.Id == 0) // Creazione
        {
            await Http.PostJsonAsync($"http://localhost:5002/api/eventi", elemento);
        }
        else // Modifica
        {
            await Http.PutJsonAsync($"http://localhost:5002/api/eventi/{elemento.Id}", elemento);
        }

        await CaricaEventi(); 
        this.EventoCorrente = null;
    }

    public void Annulla()
    {
        this.EventoCorrente = null;
    }
}